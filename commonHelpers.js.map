{"version":3,"file":"commonHelpers.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["\n export const createGalleryItemMarkup = (images) => {\n    \n   \n    return images.map((image) => {\n        \n        return `<li class=\"img\">\n         <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n           <img class=\"gallery-image\" src= \"${image.webformatURL}\"\n            data-source=\"${image.largeImageURL}\"\n             alt=\"${image.tags}\"/>\n             <ul class=\"description\">\n                    <li>\n                    <p>Likes</p>\n                    <p class=\"likes-one\">${image.likes}</p>\n                    </li>\n                    <li>\n                    <p>Views</p>\n                    <p class=\"likes-one\">${image.views}</p>\n                    </li>\n                    <li>\n                    <p>Comments</p>\n                    <p class=\"likes-one\">${image.comments}</p>\n                    </li>\n                    <li>\n                    <p>Downloads</p>\n                    <p class=\"likes-one\">${image.downloads}</p>\n                    </li>\n                </ul>\n          </a>\n        \n       </li>`\n     }).join('');\n    \n      \n  }\n\n "," const API_KEY = '43819074-06fd45097a02a2f47bb2a7010'; // Ключ\n const BASE_URL = 'https://pixabay.com/api/';  // url pixabay\n// const search = 'cat';\n// const params = `?key=${API_KEY}&q=${search}&image_type=photo&orientation=horizontal&safesearch=true `;   // параметри вказувати через &\n\n//  export const fetchPhotosByQuery = (search = 'cat') => {\n    \n//   return  fetch(`${BASE_URL}${params}`).then(response => {\n//     if (!response.ok) {\n//          throw new Error(response.statusText);\n//      }\n//      return response.json();\n//    });\n//   }\n\n\nexport function fetchPhotosByQuery(query) {\n    return fetch(`${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&per_page=15&safesearch=true&orientation=horizontal`)\n    .then(response => {\n        if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n        return response.json();\n    });\n\n}\n// fetchPhotosByQuery().then(imagesData => {\n//     console.log(imagesData.hits);\n// });","\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\n import { createGalleryItemMarkup } from \"./js/render-functions\";\n import { fetchPhotosByQuery } from \"./js/pixabay-api\";\n\n const galleryEl = document.querySelector('.gallery');\n const searchForm = document.querySelector('.js-search-form');\n const loader = document.querySelector('.js-loader');\n \n\n let lightbox;\n\n\nfunction onSearchFormSubmit (event) {\n    event.preventDefault();\n    const searchQuery = event.target.elements.searchKey.value.trim();\n  \n    if (searchQuery === \"\") {\n        galleryEl.innerHTML = '';\n        event.target.reset();\n        iziToast.show({\n            \n            message: 'Input field can not be empty',\n            messageColor: 'black',\n            close: true,\n            backgroundColor: 'orange',\n            timeout: 3000,\n        });\n        return;\n    }\n    galleryEl.innerHTML = '';\n    loader.classList.remove('is-hidden');\n    \n    fetchPhotosByQuery(searchQuery).then(imagesData => {\n       \n        galleryEl.innerHTML = createGalleryItemMarkup(imagesData.hits);\n        \n       \n        if (imagesData.total === 0) {\n            event.target.reset();\n            iziToast.show({\n            \n                message: \"Sorry, there are no images matching your search query. Please try again!\",\n                messageColor: 'blue',\n                close: true,\n                backgroundColor: 'yellow',\n                timeout: 3000,\n            });\n\n        }\n        if (!lightbox) {\n            lightbox = new SimpleLightbox('.gallery a', {\n                captionsData: 'alt',\n                captionPosition: 'bottom',\n                captionDelay: 250\n            });\n        } else {\n            lightbox.refresh();\n        }\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n        event.target.reset();\n        loader.classList.add('is-hidden');\n    });\n}\n\n\n\nsearchForm.addEventListener(\"submit\", onSearchFormSubmit);"],"names":["createGalleryItemMarkup","images","image","API_KEY","BASE_URL","fetchPhotosByQuery","query","response","galleryEl","searchForm","loader","lightbox","onSearchFormSubmit","event","searchQuery","iziToast","imagesData","SimpleLightbox","error"],"mappings":"6vBACQ,MAAMA,EAA2BC,GAG9BA,EAAO,IAAKC,GAER;AAAA,yCAC0BA,EAAM,aAAa;AAAA,8CACdA,EAAM,YAAY;AAAA,2BACrCA,EAAM,aAAa;AAAA,oBAC1BA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA,2CAIaA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,2CAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,2CAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,2CAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,aAMpD,EAAE,KAAK,EAAE,EChCRC,EAAU,qCACVC,EAAW,2BAeX,SAASC,EAAmBC,EAAO,CACtC,OAAO,MAAM,GAAGF,CAAQ,QAAQD,CAAO,MAAMG,CAAK,sEAAsE,EACvH,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACd,MAAM,IAAI,MAAMA,EAAS,UAAU,EAEnC,OAAOA,EAAS,MACxB,CAAK,CAEL,CCdC,MAAMC,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAa,SAAS,cAAc,iBAAiB,EACrDC,EAAS,SAAS,cAAc,YAAY,EAGlD,IAAIC,EAGL,SAASC,EAAoBC,EAAO,CAChCA,EAAM,eAAc,EACpB,MAAMC,EAAcD,EAAM,OAAO,SAAS,UAAU,MAAM,OAE1D,GAAIC,IAAgB,GAAI,CACpBN,EAAU,UAAY,GACtBK,EAAM,OAAO,QACbE,EAAS,KAAK,CAEV,QAAS,+BACT,aAAc,QACd,MAAO,GACP,gBAAiB,SACjB,QAAS,GACrB,CAAS,EACD,MACH,CACDP,EAAU,UAAY,GACtBE,EAAO,UAAU,OAAO,WAAW,EAEnCL,EAAmBS,CAAW,EAAE,KAAKE,GAAc,CAE/CR,EAAU,UAAYR,EAAwBgB,EAAW,IAAI,EAGzDA,EAAW,QAAU,IACrBH,EAAM,OAAO,QACbE,EAAS,KAAK,CAEV,QAAS,2EACT,aAAc,OACd,MAAO,GACP,gBAAiB,SACjB,QAAS,GACzB,CAAa,GAGAJ,EAODA,EAAS,QAAO,EANhBA,EAAW,IAAIM,EAAe,aAAc,CACxC,aAAc,MACd,gBAAiB,SACjB,aAAc,GAC9B,CAAa,CAIb,CAAK,EACA,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACjC,QAAQ,IAAM,CACXL,EAAM,OAAO,QACbH,EAAO,UAAU,IAAI,WAAW,CACxC,CAAK,CACL,CAIAD,EAAW,iBAAiB,SAAUG,CAAkB"}